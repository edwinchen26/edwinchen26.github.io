{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/templates/blog-post.js","webpack:///./src/components/seo.js"],"names":["Header","_ref","siteTitle","react_default","a","createElement","style","width","maxWidth","margin","paddingBottom","borderBottom","display","background","padding","color","fontSize","fontWeight","textShadow","gatsby_browser_entry","to","textDecoration","replace","propTypes","PropTypes","string","defaultProps","Layout","children","query","render","data","Fragment","className","header","site","siteMetadata","title","Date","getFullYear","href","_755544856","node","isRequired","__webpack_require__","d","__webpack_exports__","BlogPost","props","post","markdownRemark","frontmatter","layout","seo","dangerouslySetInnerHTML","__html","html","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf"],"mappings":"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","file":"component---src-templates-blog-post-js-e0a192861e731181f8ec.js","sourcesContent":["import {Link} from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <div style={{ width: `100%`, maxWidth: `1024px`, margin: `20px auto 0 auto`, paddingBottom: `20px`, borderBottom: `1px solid rgba(0, 0, 0, .1)` }}>\r\n    <h2 style={{ display: `inline`, background: `#FFCA71`, padding: `0 10px`, color: `#ffffff`, fontSize: `1.5rem`, fontWeight: 600, textShadow: `1px 1px 3px rgba(0, 0, 0, .1)` }}>\r\n      <Link to=\"/\" style={{ textDecoration: `none` }} replace>\r\n        {siteTitle}\r\n      </Link>\r\n    </h2>\r\n  </div>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\nimport Header from './header'\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <div className=\"container\">\r\n        \r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <div style={{ width: `100%`, maxWidth: `1024px`, margin: `0 auto`, }}>\r\n          {children}\r\n          <footer>\r\n            © {new Date().getFullYear()}, Built with\r\n            {` `}\r\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n          </footer>\r\n        </div>\r\n\r\n        </div>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react';\r\nimport Layout from '../components/layout';\r\nimport SEO from '../components/seo'\r\nimport { graphql } from 'gatsby'\r\n\r\nfunction BlogPost(props) {\r\n    const post = props.data.markdownRemark;\r\n    const { title } = post.frontmatter;\r\n    return (\r\n        <Layout>\r\n            <SEO title={title} />\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <div dangerouslySetInnerHTML={{ __html: post.html }} />\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default BlogPost;\r\nexport const query = graphql`\r\n query PostQuery($slug: String!) {\r\n     markdownRemark(fields: { slug: { eq: $slug } }) {\r\n       html\r\n       frontmatter {\r\n        title\r\n        description\r\n       }\r\n   }\r\n}`","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  return (\r\n    <StaticQuery\r\n      query={detailsQuery}\r\n      render={data => {\r\n        const metaDescription =\r\n          description || data.site.siteMetadata.description\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s · ${data.site.siteMetadata.title}`}\r\n            meta={[\r\n              {\r\n                name: `description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:title`,\r\n                content: data.site.siteMetadata.title,\r\n              },\r\n              {\r\n                property: `og:description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:type`,\r\n                content: `website`,\r\n              },\r\n              {\r\n                name: `twitter:card`,\r\n                content: `summary`,\r\n              },\r\n              {\r\n                name: `twitter:creator`,\r\n                content: data.site.siteMetadata.author,\r\n              },\r\n              {\r\n                name: `twitter:title`,\r\n                content: data.site.siteMetadata.title,\r\n              },\r\n              {\r\n                name: `twitter:description`,\r\n                content: metaDescription,\r\n              },\r\n            ]\r\n              .concat(\r\n                keywords.length > 0\r\n                  ? {\r\n                      name: `keywords`,\r\n                      content: keywords.join(`, `),\r\n                    }\r\n                  : []\r\n              )\r\n              .concat(meta)} />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n  title: `Home`,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n\r\nconst detailsQuery = graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}