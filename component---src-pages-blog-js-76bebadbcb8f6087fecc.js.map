{"version":3,"sources":["webpack:///./src/components/tags.js","webpack:///./src/pages/blog.js"],"names":["tags","react_default","a","createElement","gatsby_browser_entry","query","render","data","allMarkdownRemark","group","map","item","to","fieldValue","style","display","padding","margin","background","borderRadius","textDecoration","fontSize","fontWeight","replace","_1727232696","__webpack_require__","d","__webpack_exports__","listQuery","BlogPage","props","postList","className","seo","header","color","edges","_ref","i","node","fields","slug","post","title","frontmatter","date","cover","image","childImageSharp","fluid","footer"],"mappings":"kLAGeA,EAAA,kBACbC,EAAAC,EAAAC,cAACC,EAAA,YAAD,CACEC,MAAK,aAaLC,OAAQ,SAAAC,GAAI,OACRA,EAAKC,kBAAkBC,MAAMC,IAAI,SAAAC,GAAI,OACnCV,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAMQ,GAAE,SAAYD,EAAKE,WAAeC,MAAO,CAAEC,QAAS,eAAgBC,QAAS,WAAYC,OAAQ,gBAAiBC,WAAY,qBAAsBC,aAAc,OAAQC,eAAgB,OAAQC,SAAU,QAASC,WAAY,QAASrB,EAAAC,EAAAC,cAAA,gBAASQ,EAAKE,WAAWU,QAAQ,IAAI,UAhB7RhB,KAAAiB,YCJFC,EAAAC,EAAAC,EAAA,8BAAAC,IAgCeC,UAvBE,SAACC,GAChB,IAAMC,EAAWD,EAAMvB,KAAKC,kBAC5B,OAEEP,EAAAC,EAAAC,cAAA,OAAK6B,UAAU,aACb/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,MACAhC,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,MACAjC,EAAAC,EAAAC,cAAA,OAAK6B,UAAU,SACb/B,EAAAC,EAAAC,cAACH,EAAD,MACAC,EAAAC,EAAAC,cAAA,MAAIW,MAAO,CAAEO,SAAU,OAAQc,MAAO,UAAWlB,OAAQ,WAAzD,aACAhB,EAAAC,EAAAC,cAAA,OAAK6B,UAAU,WACZD,EAASK,MAAM1B,IAAI,SAAA2B,EAASC,GAAT,IAAEC,EAAFF,EAAEE,KAAF,OAChBtC,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAMQ,GAAI2B,EAAKC,OAAOC,KAAMT,UAAU,QACpC/B,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAMC,MAAOJ,EAAKK,YAAYD,MAAOE,KAAMN,EAAKK,YAAYC,KAAMC,MAAOP,EAAKK,YAAYG,MAAMC,gBAAgBC,aAK1HhD,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,QAlBN,IAyBatB,EAAS","file":"component---src-pages-blog-js-76bebadbcb8f6087fecc.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql, StaticQuery } from \"gatsby\"\r\n\r\nexport default () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n    query {\r\n      allMarkdownRemark(\r\n        sort: { order: DESC, fields: [frontmatter___tags] }\r\n        limit: 2000\r\n        ) {\r\n        group(field: frontmatter___tags) {\r\n          fieldValue\r\n          totalCount\r\n        }\r\n      }\r\n    }\r\n  `}\r\n    render={data => (\r\n        data.allMarkdownRemark.group.map(item =>\r\n          <Link to={`/tags/${ item.fieldValue }`} style={{ display: 'inline-block', padding: '7px 15px', margin: '0 10px 10px 0', background: 'rgba(0, 0, 0, .25)', borderRadius: '50px', textDecoration: 'none', fontSize: '.7rem', fontWeight: '600' }}><span>#{ item.fieldValue.replace(\"-\",\" \") }</span></Link>\r\n        )\r\n    )}\r\n  />\r\n)","import React from 'react'\r\nimport { Link, graphql } from 'gatsby'\r\nimport Header from '../components/header'\r\nimport SEO from '../components/seo'\r\nimport Post from '../components/post'\r\nimport Footer from '../components/footer'\r\nimport Tags from '../components/tags'\r\nimport './index.css'\r\n\r\nconst BlogPage = (props) => {\r\n  const postList = props.data.allMarkdownRemark;\r\n  return(\r\n\r\n    <div className=\"container\">\r\n      <SEO />\r\n      <Header />\r\n      <div className=\"posts\">\r\n        <Tags />\r\n        <h3 style={{ fontSize: '2rem', color: '#f5ab35', margin: '10px 0' }}>All posts</h3>\r\n        <div className=\"content\">\r\n          {postList.edges.map(({node}, i) => (\r\n              <Link to={node.fields.slug} className=\"link\">\r\n                <Post title={node.frontmatter.title} date={node.frontmatter.date} cover={node.frontmatter.image.childImageSharp.fluid} />\r\n              </Link>\r\n            ))}\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogPage\r\n\r\nexport const listQuery = graphql`\r\n  query BlogQuery {\r\n    allMarkdownRemark(\r\n      sort: { order: DESC, fields: [frontmatter___date] }\r\n      filter: { frontmatter: { type: { eq: \"blog\" } } }\r\n      ) {\r\n      edges {\r\n        node {\r\n          fields{\r\n            slug\r\n          }\r\n          excerpt(pruneLength: 250)\r\n          frontmatter {\r\n            date(formatString: \"MMMM D, YYYY\")\r\n            title\r\n            image {\r\n              childImageSharp {\r\n                resize(width: 1500, height: 1500) {\r\n                  src\r\n                }\r\n                fluid(maxWidth: 786) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n           }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}